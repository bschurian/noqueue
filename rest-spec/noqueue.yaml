swagger: '2.0'
info:
  title: NoQueue REST API
  version: "0.1.0"
  description: |
    POST response contains a Link to the newly created Resource
schemes:
  - http
  - https
host: localhost:9000
basePath: /api
produces:
  - application/json
paths:
  /anwender/me:
    get:
      summary: Gets "my" Anwender
      description: |
        asdas
      responses:
        200:
          description: The Anwender that is me
          schema:
            $ref: '#/definitions/Anwender'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - anwenderSecurity: []
    post: 
      parameters:
        - in: formData
          name: nutzerEmail
          description: Updated nutzerEmail of the Anwender
          type: string
        - in: formData
          name: password
          description: Updated password of the Anwender
          type: string
        - in: formData
          name: nutzerName
          description: Updated nutzerName of the Anwender
          type: string
        - in: formData
          name: adresse
          description: Updated adresse of the Anwender
          type: string      
      summary: Creates a new Anwender
      description: |
        afsaf
      responses:
        200:
          description: Succesfully created a new Anwender
          schema:
            $ref: '#/definitions/Location'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - anwenderSecurity: []
    patch:
      summary: Updates "my" Anwender
      description: |
        asdas
      parameters:
        - in: formData
          name: nutzerEmail
          description: Updated nutzerEmail of the Anwender
          type: string
        - in: formData
          name: password
          description: Updated password of the Anwender
          type: string
        - in: formData
          name: nutzerName
          description: Updated nutzerName of the Anwender
          type: string
        - in: formData
          name: asdf
          description: order placed for purchasing the pet
          type: string #OIOIOIOIOIOIIOIOIOI
          #schema:
           # $ref: "#/definitions/Anwender"
      responses:
        204:
          description: The Anwender that is me
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - anwenderSecurity: []
    delete:
      summary: deletes "my" Anwender
      description: |
        asdas
      responses:
        206:
          description: Succesfully deleted "my" Anwender
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - anwenderSecurity: []
  /anwender/{id}:
    parameters:
      - in: path
        name: id
        description: ID of Anwender
        required: true
        type: integer
        format: int64
    get:
      summary: Fetches an Anwender through his corresponding Id
      description: asdf#TODO
      responses:
        200:
          description: The Anwender with the corresponding Id
          schema:
            $ref: '#/definitions/Anwender'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /anwender/auth:
    get:
      parameters:
        - in: header
          name: anwenderId
          type: integer
      responses:
        200:
          description: The Anwender with the corresponding Id
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      responses:
        204:
          description: succesfully closed the sess
  /betrieb/{betriebId}:
    parameters:
      - in: path
        name: betriebId
        description: Id of the betrieb
        required: true
        type: integer
        format: int64
    get:
      summary: Fetches a Betrieb where i'm an owner
      description: b #TODO
      responses:
        200:
          description: Fetched "my" Betrieb
          schema:
            $ref: '#/definitions/Betrieb'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Updates "my" Betrieb
      description: b #TODO
      parameters:
        - in: formData
          name: tel
          type: string #$ref: '#/definitions/Betrieb' #OIOIOIOIOIOI
        - in: formData
          name: oeffnungszeiten
          type: string
        - in: formData
          name: nutzerName
          type: string
      responses:
        200:
          description: The Anwender that is me
          schema:
            $ref: '#/definitions/Anwender'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Deletes "my" Betrieb
      description: asdf #TODO
      responses:
        200:
          description: The Anwender that is me
          schema:
            $ref: '#/definitions/Response'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /betrieb/{betriebId}/dienstleistung/{dlId}:
    parameters:
      - in: path
        name: betriebId
        description: Id of the betrieb
        required: true
        type: integer
        format: int64
      - in: path
        name: dlId
        description: Id of the DienstleistungsTyp
        required: true
        type: integer
        format: int64
    get:
      summary: Fetches an Dienstleistung through its corresponding Id
      description: b #TODO
      responses:
        200:
          description: The Dienstleistung with the corresponding Id 
          schema:
            $ref: '#/definitions/Dienstleistung'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /dienstleistungstyp{dltId}:
    parameters:
      - in: path
        name: dltId
        description: Id of the DienstleinstungsTyp
        required: true
        type: integer
        format: int64
    get:
      summary: Fetches an DienstleistungsTyp through its corresponding Id
      description: b #TODO
      parameters:
        - in: header
          name: dltId
          description: Id of the DienstleistungsTyp
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: The DienstleistungsTyp with the corresponding Id and referencing Dienstleistungs
          schema:
            type: object
            properties:
              dlt:
                $ref: '#/definitions/DienstleistungsTyp'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      parameters:
        - in: formData
          name: name
          required: true
          type: string
      responses:
        200:
          description: Succesfully created a new DienstleistungsTyp 
          schema:
            $ref: '#/definitions/Location'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /dienstleistungstyp{dltId}/dienstleistung:
    parameters:
      - in: path
        name: dltId
        description: Id of the DienstleinstungsTyp
        required: true
        type: integer
        format: int64
    get:
      summary: Fetches an DienstleistungsTyp through its corresponding Id
      description: b #TODO
      parameters:
        - in: header
          name: dltId
          description: Id of the DienstleistungsTyp
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: The referencing Dienstleistungs of this DienstleistungsTyp
          schema:
            type: object
            properties:
              dl:
                type: array
                items:
                  $ref: '#/definitions/Dienstleistung'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
securityDefinitions:
  anwenderSecurity:
    type: basic
  #betriebAuth:
    #type: oauth2
    #...OIOIOIOIOIOIOI
definitions:
  WarteschlangenPlatz:
    type: object
    properties:
      wspId:
        type: integer
      folgeNummer:
        type: integer
      beginnZeitpunkt:
        type: string #OIOIOIOIOIOI
      schatzZeitpunkt:
        type: string #OIOIOIOIOIOI
      platzNummer: 
        type: integer
  Mitarbeiter:
    type: object
    properties:
      anwender:
        $ref: '#/definitions/Anwender'
      anwesend:
        type: boolean
      faehigkeiten:
        type: array
        items:
          $ref: '#/definitions/Dienstleistung'
  Anwender:
    type: object
    properties:
      anwenderId:
        type: integer
        format: int64
      nutzerName:
        type: string
  Betrieb:
    type: object
    properties:
      betriebId: 
        type: integer
        format: int64
      adresse:
        $ref: '#/definitions/Adresse'
      tel:
        type: string
      oeffnungszeiten:
        type: string
      kontaktEmail:
        type: string
      wsOffen:
        type: string
      bewertung:
        type: number
  Adresse:
    type: object
    properties:
      empty:
        type: string
  Dienstleistung:
    type: object
    properties:
      dlId:
        type: integer
      name:
        type: string #######OIOIOIOIOIOIOOIOIOIOIOIOIOIOI
      owner:
        $ref: '#/definitions/Betrieb' ###OIOIOIOIOIOIOIOIOIOIOIOIOIOI
      schaetzDauer: 
        type: number
      aktion:
        type: string
      von:
        $ref: '#/definitions/Date'
      bis:
        $ref: '#/definitions/Date'
      tags:
        type: array
        items:
          type: string
  DienstleistungsTyp:
    type: object
    properties:
      dltId:
        type: integer
      name:
        type: string
  Date:
    type: object
    properties:
      year:
        type: integer
  Location:
    type: object
    properties:
      location:
        type: string
  Response:
    type: object
    properties:
      meta:
        properties:
          code:
            type: number
      data:
        type: object    
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  